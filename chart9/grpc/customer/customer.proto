syntax = "proto3";
// 使用的proto 版本号：3.6.0
//更多的类型信息，请参考地址 https://developers.google.com/protocol-buffers/docs/proto3
package customer;


// 消费者服务定义.
service CustomerService {
  // 使用过滤规则获取所有消费信息： 服务端到客户端的流RPC
  rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest) {}
  // 创建一个新的消费者：一个简单的RPC
  rpc CreateCustomer (CustomerRequest) returns (CustomerResponse) {}
}

// 定义消息请求的实例对象CustomerRequest
message CustomerRequest {
  // Customer关键字字段.
  int32 id = 1;
  string name = 2;
  string email = 3;
  string phone= 4;

  message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string zip = 4;
    bool isShippingAddress = 5;
  }
  //定义重复字段的个数
  repeated Address addresses = 5;
   // Each element in a repeated field requires re-encoding the tag number,
   //so repeated fields are particularly good candidates for this optimization.
   //repeated :If a field is repeated, the field may be repeated any number of times (including zero).
   //The order of the repeated values will be preserved in the protocol buffer. Think of repeated fields as dynamically sized arrays.
}

// 定义消息响应的实例对象CustomerResponse
message CustomerResponse {
  int32 id = 1;
  bool success = 2;
}

// 定义消息过滤的实例对象CustomerFilter
message CustomerFilter {
  string keyword = 1;
}

//complie model cmd:
// protoc -I=$SRC_DIR --go_out=$DST_DIR $SRC_DIR/addressbook.proto
//e.g.:
// demo : protoc -I customer/ customer/customer.proto --go_out=plugins=grpc:customer