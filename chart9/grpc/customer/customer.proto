syntax = "proto3";
// use proto version 3.6.0
//field type definition, please referring to https://developers.google.com/protocol-buffers/docs/proto3
package customer;


// The Customer service definition.
service CustomerService {
  // Get all Customers with filter - A server-to-client streaming RPC.
  rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest) {}
  // Create a new Customer - A simple RPC
  rpc CreateCustomer (CustomerRequest) returns (CustomerResponse) {}
}

// Request message for creating a new customer
message CustomerRequest {
  int32 id = 1;  // Unique ID number for a Customer.
  string name = 2;
  string email = 3;
  string phone= 4;

  message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string zip = 4;
    bool isShippingAddress = 5;
  }
  // Each element in a repeated field requires re-encoding the tag number,
  //so repeated fields are particularly good candidates for this optimization.
  repeated Address addresses = 5;
  //repeated :If a field is repeated, the field may be repeated any number of times (including zero).
  //The order of the repeated values will be preserved in the protocol buffer. Think of repeated fields as dynamically sized arrays.
}

message CustomerResponse {
  int32 id = 1;
  bool success = 2;
}
message CustomerFilter {
  string keyword = 1;
}

//complie cmd:
// protoc -I=$SRC_DIR --go_out=$DST_DIR $SRC_DIR/addressbook.proto
// demo : protoc -I customer/ customer/customer.proto --go_out=plugins=grpc:customer